{"category":"DFPlayerMini","color":"#9c7c7c","blocks":["__DFPlayerMini_init","__DFPlayerMini_play","__DFPlayerMini_volume","__DFPlayerMini_stop"],"jscode":"// Block __DFPlayerMini_init\nvar __DFPlayerMini_init_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"DFPlayerMiini_Init\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"TX\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"TX\"\n        }\n    ],\n    \"message2\": \"%1 %2\",\n    \"args2\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"RX\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"RX\"\n        }\n    ],\n    \"colour\": \"#9c7c7c\"\n};\n\nwindow['Blockly'].Blocks['__DFPlayerMini_init'] = {\n    init: function() {\n        this.jsonInit(__DFPlayerMini_init_json);\n    }\n};\n\nwindow['Blockly'].Python['__DFPlayerMini_init'] = function(block) {\n    var TX = block.getFieldValue('TX');\nvar RX = block.getFieldValue('RX');\n    return `uart1 = machine.UART(1, tx=${TX}, rx=${RX})\nuart1.init(9600, bits=8, parity=None, stop=1)\nwait(1)\n\ndef _send_cmd(cmd, val):\n    sum = 0xfefb - cmd - val\n    uart1.write(bytes([0x7e, 0xff, 0x06, cmd, 0x00, val >> 8, val & 0xff, sum >> 8, sum & 0xff, 0xef]))\n    \ndef _play(num):\n    _send_cmd(0x03, num)\n\ndef _stop():\n    _send_cmd(0x16, 0)\n\ndef _volume(num):\n    _send_cmd(0x06, num)\n` + \"\\n\";\n};\n\n// Block __DFPlayerMini_play\nvar __DFPlayerMini_play_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"DFPlayerMini_Play\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"num\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"num\"\n        }\n    ],\n    \"colour\": \"#9c7c7c\"\n};\n\nwindow['Blockly'].Blocks['__DFPlayerMini_play'] = {\n    init: function() {\n        this.jsonInit(__DFPlayerMini_play_json);\n    }\n};\n\nwindow['Blockly'].Python['__DFPlayerMini_play'] = function(block) {\n    var num = Blockly.Python.valueToCode(block, 'num', Blockly.Python.ORDER_NONE);\n    return `_play(${num})\n` + \"\\n\";\n};\n\n// Block __DFPlayerMini_volume\nvar __DFPlayerMini_volume_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"DFPlayerMini_Volume\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"vol\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"vol\"\n        }\n    ],\n    \"colour\": \"#9c7c7c\"\n};\n\nwindow['Blockly'].Blocks['__DFPlayerMini_volume'] = {\n    init: function() {\n        this.jsonInit(__DFPlayerMini_volume_json);\n    }\n};\n\nwindow['Blockly'].Python['__DFPlayerMini_volume'] = function(block) {\n    var vol = Blockly.Python.valueToCode(block, 'vol', Blockly.Python.ORDER_NONE);\n    return `_volume(${vol})` + \"\\n\";\n};\n\n// Block __DFPlayerMini_stop\nvar __DFPlayerMini_stop_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"DFPlayerMini_Stop\"\n        }\n    ],\n    \"colour\": \"#9c7c7c\"\n};\n\nwindow['Blockly'].Blocks['__DFPlayerMini_stop'] = {\n    init: function() {\n        this.jsonInit(__DFPlayerMini_stop_json);\n    }\n};\n\nwindow['Blockly'].Python['__DFPlayerMini_stop'] = function(block) {\n        return `_stop()` + \"\\n\";\n};\n\n","code":{"init":["window['Blockly'].Python['__DFPlayerMini_init'] = function(block) {\n    var TX = block.getFieldValue('TX');\nvar RX = block.getFieldValue('RX');\n    return `uart1 = machine.UART(1, tx=${TX}, rx=${RX})\nuart1.init(9600, bits=8, parity=None, stop=1)\nwait(1)\n\ndef _send_cmd(cmd, val):\n    sum = 0xfefb - cmd - val\n    uart1.write(bytes([0x7e, 0xff, 0x06, cmd, 0x00, val >> 8, val & 0xff, sum >> 8, sum & 0xff, 0xef]))\n    \ndef _play(num):\n    _send_cmd(0x03, num)\n\ndef _stop():\n    _send_cmd(0x16, 0)\n\ndef _volume(num):\n    _send_cmd(0x06, num)\n` + \"\\n\";\n};\n\n","uart1 = machine.UART(1, tx=${TX}, rx=${RX})\nuart1.init(9600, bits=8, parity=None, stop=1)\nwait(1)\n\ndef _send_cmd(cmd, val):\n    sum = 0xfefb - cmd - val\n    uart1.write(bytes([0x7e, 0xff, 0x06, cmd, 0x00, val >> 8, val & 0xff, sum >> 8, sum & 0xff, 0xef]))\n    \ndef _play(num):\n    _send_cmd(0x03, num)\n\ndef _stop():\n    _send_cmd(0x16, 0)\n\ndef _volume(num):\n    _send_cmd(0x06, num)\n"],"play":["window['Blockly'].Python['__DFPlayerMini_play'] = function(block) {\n    var num = Blockly.Python.valueToCode(block, 'num', Blockly.Python.ORDER_NONE);\n    return `_play(${num})\n` + \"\\n\";\n};\n\n","_play(${num})\n"],"volume":["window['Blockly'].Python['__DFPlayerMini_volume'] = function(block) {\n    var vol = Blockly.Python.valueToCode(block, 'vol', Blockly.Python.ORDER_NONE);\n    return `_volume(${vol})` + \"\\n\";\n};\n\n","_volume(${vol})"],"stop":["window['Blockly'].Python['__DFPlayerMini_stop'] = function(block) {\n        return `_stop()` + \"\\n\";\n};\n\n","_stop()"]}}